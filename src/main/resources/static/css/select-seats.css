<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Select Seats - Movie Vault</title>
    <link rel="stylesheet" href="/css/common.css">
    <link rel="stylesheet" href="/css/select-seats.css">
    <style>
        body { background: #0b0b1d; color: #fff; font-family: 'Segoe UI', Arial, sans-serif; }
        .seat-container {
            background: #13132d;
            border-radius: 10px;
            padding: 30px;
            margin: 20px auto;
            max-width: 800px;
        }
        .screen {
            background: #6c63ff;
            color: white;
            text-align: center;
            padding: 10px;
            margin: 20px 0;
            border-radius: 5px;
            box-shadow: 0 3px 10px rgba(108, 99, 255, 0.5);
        }
        .movie-info {
            margin-bottom: 20px;
            padding: 15px;
            background: rgba(0,0,0,0.2);
            border-radius: 5px;
        }
        .seat-map {
            margin: 30px auto;
            max-width: 500px;
        }
        .row {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 10px;
        }
        .row-label {
            width: 30px;
            text-align: center;
            color: #cd8c38;
            margin-right: 5px;
            font-weight: bold;
        }
        .seat {
            width: 25px;
            height: 25px;
            margin: 3px;
            border-radius: 5px;
            background: #2c2c54;
            cursor: pointer;
            transition: all 0.2s;
        }
        .seat:hover {
            transform: scale(1.1);
        }
        .seat.selected { background: #6c63ff; }
        .seat.occupied { background: #ff6b6b; cursor: not-allowed; }
        .booking-summary {
            margin-top: 30px;
            padding: 20px;
            background: rgba(255,255,255,0.1);
            border-radius: 5px;
        }
        .book-btn {
            background: #6c63ff;
            color: white;
            border: none;
            padding: 10px 25px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: background 0.3s;
        }
        .book-btn:hover {
            background: #5952cc;
        }
        .seat-legend {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin: 20px 0;
        }
        .legend-item {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        .legend-box {
            width: 15px;
            height: 15px;
            border-radius: 3px;
        }
    </style>
</head>
<body>
<nav style="background: #13132d; padding: 1rem 2rem; display: flex; align-items: center; justify-content: space-between;">
    <div style="font-size: 2rem; font-weight: bold; letter-spacing: 0.2em;">
        <span style="display: block; color: #fff;">MOVIE</span>
        <span style="display: block; color: #fff;">VAULT</span>
    </div>
    <div>
        <a href="/" style="color: #fff; margin: 0 1rem;">HOME</a>
        <a href="/movies.html" style="color: #fff; margin: 0 1rem;">MOVIES</a>
        <a href="#" style="color: #fff; margin: 0 1rem;">DEALS AND EXCLUSIVES</a>
        <a href="/login.html" style="color: #fff; margin: 0 1rem;">LOGIN</a>
    </div>
</nav>

<div class="seat-container">
    <h1>Select Your Seats</h1>

    <div class="movie-info">
        <h2 id="movieTitle">Loading movie details...</h2>
        <p id="theaterName">Loading theater details...</p>
        <p id="showTime">Show Time: Loading...</p>
    </div>

    <div class="screen">SCREEN</div>

    <div class="seat-legend">
        <div class="legend-item">
            <div class="legend-box" style="background: #2c2c54;"></div>
            <span>Available</span>
        </div>
        <div class="legend-item">
            <div class="legend-box" style="background: #6c63ff;"></div>
            <span>Selected</span>
        </div>
        <div class="legend-item">
            <div class="legend-box" style="background: #ff6b6b;"></div>
            <span>Occupied</span>
        </div>
    </div>

    <div class="seat-map" id="seatMap">
        <p style="text-align: center; color: #888;">Loading seat layout...</p>
    </div>

    <div class="booking-summary">
        <p>Selected Seats: <span id="selectedSeats">None</span></p>
        <p>Total Price: Rs. <span id="totalPrice">0</span></p>
        <button id="bookBtn" class="book-btn">Proceed to Payment</button>
    </div>
</div>

<script>
    // Session check
    if (sessionStorage.getItem('isLoggedIn') !== 'true') {
        window.location.href = '/login.html';
    }

    let movieId, theaterId;
    let refreshInterval;

    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);
        movieId = urlParams.get('id');
        theaterId = urlParams.get('theaterId');

        if (!movieId || !theaterId) {
            alert('Missing required parameters');
            window.location.href = '/movies.html';
            return;
        }

        loadMovieDetails();
        loadTheaterDetails();
        setupAutoRefresh();
    });

    async function loadMovieDetails() {
        try {
            const response = await fetch(`/api/movies/${movieId}`);
            if (!response.ok) throw new Error('Movie not found');
            const movie = await response.json();

            document.getElementById('movieTitle').textContent = movie.title;
            document.getElementById('showTime').textContent = `Show Time: ${movie.showTime}`;
        } catch (error) {
            console.error('Failed to load movie:', error);
            document.getElementById('movieTitle').textContent = 'Movie information unavailable';
        }
    }

    async function loadTheaterDetails() {
        try {
            const response = await fetch(`/api/theaters/${theaterId}`);
            if (!response.ok) throw new Error('Theater not found');
            const theater = await response.json();

            document.getElementById('theaterName').textContent = theater.name;
            generateSeatLayout(theater.seatRows, theater.totalSeats);
        } catch (error) {
            console.error('Failed to load theater:', error);
            document.getElementById('theaterName').textContent = 'Theater information unavailable';
        }
    }

    function generateSeatLayout(rows, totalSeats) {
        const seatMap = document.getElementById('seatMap');
        seatMap.innerHTML = '';
        const seatsPerRow = Math.floor(totalSeats / rows);

        for (let i = 0; i < rows; i++) {
            const row = document.createElement('div');
            row.className = 'row';

            const rowLabel = document.createElement('div');
            rowLabel.className = 'row-label';
            rowLabel.textContent = String.fromCharCode(65 + i);
            row.appendChild(rowLabel);

            for (let j = 0; j < seatsPerRow; j++) {
                const seat = document.createElement('div');
                seat.className = 'seat';
                seat.dataset.id = `${String.fromCharCode(65 + i)}${j+1}`;
                seat.onclick = handleSeatClick;
                row.appendChild(seat);
            }
            seatMap.appendChild(row);
        }

        loadOccupiedSeats();
    }

    async function loadOccupiedSeats() {
        try {
            const response = await fetch(`/api/bookings/seats?movieId=${movieId}&theaterId=${theaterId}`);
            const occupiedSeats = await response.json();

            occupiedSeats.forEach(seatId => {
                const seat = document.querySelector(`.seat[data-id="${seatId}"]`);
                if (seat) {
                    seat.classList.add('occupied');
                    seat.onclick = null;
                }
            });
        } catch (error) {
            console.error('Failed to load occupied seats:', error);
        }
    }

    function setupAutoRefresh() {
        refreshInterval = setInterval(async () => {
            await loadOccupiedSeats();
        }, 5000); // Refresh every 5 seconds
    }

    function handleSeatClick() {
        if (this.classList.contains('occupied')) return;
        this.classList.toggle('selected');
        updateBookingSummary();
    }

    function updateBookingSummary() {
        const selectedSeats = Array.from(document.querySelectorAll('.seat.selected'))
            .map(seat => seat.dataset.id);

        document.getElementById('selectedSeats').textContent =
            selectedSeats.length > 0 ? selectedSeats.join(', ') : 'None';

        document.getElementById('totalPrice').textContent =
            selectedSeats.length * 300;
    }

    document.getElementById('bookBtn').addEventListener('click', () => {
        const selectedSeats = Array.from(document.querySelectorAll('.seat.selected'))
            .map(seat => seat.dataset.id);

        if (selectedSeats.length === 0) {
            alert('Please select at least one seat');
            return;
        }

        // Store booking details for payment page
        sessionStorage.setItem('bookingDetails', JSON.stringify({
            movieId: movieId,
            theaterId: theaterId,
            seatNumbers: selectedSeats,
            totalAmount: selectedSeats.length * 300
        }));

        window.location.href = '/payment.html';
    });

    // Cleanup on page unload
    window.addEventListener('beforeunload', () => {
        clearInterval(refreshInterval);
    });
</script>
</body>
</html>
